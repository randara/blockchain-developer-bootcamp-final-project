{"version":3,"sources":["getWeb3.js","components/Default.js","components/Header.js","components/Scholarships.js","components/Universities.js","components/Donor.js","components/Footer.js","components/ToDo.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","provider","providers","HttpProvider","Default","className","Component","Header","TextField","label","defaultValue","this","props","contractAddress","InputProps","readOnly","style","margin","width","accounts","helperText","Scholarships","state","TableContainer","Table","sx","minWidth","aria-label","TableHead","TableRow","TableCell","align","fontWeight","TableBody","scholarshipList","map","item","index","key","name","balance","need","Universities","handleCreateButtonClick","event","inputCreateScholarshipValue","setState","inputCreateScholarshipValueError","inputCreateNeedAmount","inputCreateNeedAmountError","isNaN","contract","methods","createScholarship","Math","round","send","from","catch","error","alert","message","getScholarshipListLength","call","scholarshipListLength","i","getScholarshipValues","console","log","scholarshipValue","push","handleUpdateButtonClick","inputUpdateScholarshipValue","inputUpdateScholarshipValueError","inputUpdateNeedAmountError","inputUpdateNeedAmount","updateScholarshipNeed","target","value","id","variant","required","onChange","handleCreateScholarshipInputChange","bind","size","fullWidth","marginBottom","handleCreateNeedInputChange","Button","onClick","handleCreateResetButtonClick","select","handleUpdateScholarshipInputChange","MenuItem","handleUpdateNeedInputChange","handleUpdateResetButtonClick","Donor","handleDonateButtonClick","inputDonorValue","inputDonorValueError","inputDonorAmountValue","inputDonorAmountValueError","sendDonation","handleDonorInputChange","handleDonorAmountInputChange","handleDonorResetButtonClick","Footer","textAlign","ToDo","App","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","CryptoScholarship","networks","instance","Contract","abi","address","runExample","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bebadec2.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    window.addEventListener(\"load\", async () => {\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          await window.ethereum.enable();\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      else if (window.web3) {\n        const web3 = window.web3;\n        resolve(web3);\n      }\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { Component } from \"react\";\n\nclass Default extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Crypto Scholarships</h1>\n        <h2>Welcome to Crypto Scholarships!</h2>\n        <p>Please login with your MetaMask wallet and connect your account on the Rinkeby Test Network.</p>\n        <small>(might need to add tests networks in MetaMask)</small>\n      </div>\n    )\n  }\n}\n\nexport default Default;\n","import React, { Component } from \"react\";\nimport { TextField } from '@mui/material';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Crypto Scholarships</h1>\n        \n        <div>\n          <p> Donors can donate crypto to any Scholarships in the smart contract. Universities can send funds from the smart contract to their address when needed.</p>\n        </div>\n        <div>\n          <TextField\n           label=\"Smart Contract Address in Testnet (Read Only)\"\n           defaultValue={this.props.contractAddress}\n           InputProps={{readOnly: true}}\n           style={{margin: '1vw', width: '30vw'}}\n         />\n        </div>\n        <div>\n          <TextField\n           label=\"MetaMask Account (Read Only)\"\n           defaultValue={this.props.accounts[0]}\n           helperText=\"You can disconnect this account in MetaMask.\"\n           InputProps={{readOnly: true}}\n           style={{margin: '1vw', width: '30vw'}}\n         />\n        </div>\n\n        <small>\n          If the balance of a scholarship is not enough to cover students, Universities can update what they \"need\" so that donors can donate accordingly.\n        </small>\n      </div>\n    )\n  }\n}\n\nexport default Header;\n","import { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@mui/material';\nimport React, { Component } from \"react\";\n\nclass Scholarships extends Component {\n  constructor(props) {\n    // Might not be a good idea but this is my first react app.\n    super(props);\n    this.state = props.state;\n  }\n\n  render() {\n    return (\n      <div>\n        <TableContainer>\n          <Table sx={{ minWidth: 500 }} aria-label=\"category table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"left\" style={{fontWeight: 'bold'}}>SCHOLARSHIP NAME</TableCell>\n                <TableCell align=\"right\" style={{fontWeight: 'bold'}}>BALANCE (in wei)</TableCell>\n                <TableCell align=\"right\" style={{fontWeight: 'bold'}}>NEED (in wei)</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.scholarshipList.map((item, index) => (\n                <TableRow key={index}>\n                  <TableCell align=\"left\">{item.name}</TableCell>\n                  <TableCell align=\"right\">{item.balance}</TableCell>\n                  <TableCell align=\"right\">{item.need}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    )\n  }\n}\n\nexport default Scholarships;\n","import React, { Component } from \"react\";\nimport { Typography, MenuItem, Button, TextField } from '@mui/material';\n\nclass Universities extends Component {\n  constructor(props) {\n    // Might not be a good idea but this is my first react app.\n    super(props);\n    this.state = props.state;\n  }\n\n  handleCreateButtonClick = async (event) => {\n    try{\n      if(this.state.inputCreateScholarshipValue === \"\")\n        await this.setState({inputCreateScholarshipValueError: true});\n      else\n        await this.setState({inputCreateScholarshipValueError: false});\n\n      if(this.state.inputCreateNeedAmount === \"\")\n        await this.setState({inputCreateNeedAmountError: true});\n      else if(isNaN(this.state.inputCreateNeedAmount)) {\n        await this.setState({inputCreateNeedAmountError: true});\n      } else if(this.state.inputCreateNeedAmount<0)\n        await this.setState({inputCreateNeedAmountError: true});\n      else\n        await this.setState({inputCreateNeedAmountError: false});\n\n      if(!this.state.inputCreateScholarshipValueError && !this.state.inputCreateNeedAmountError) {\n        let scholarshipList = [];\n        await this.state.contract.methods\n        .createScholarship(this.state.inputCreateScholarshipValue, Math.round(this.state.inputCreateNeedAmount))\n        .send({ from: this.state.accounts[0] })\n        .catch((error) => {\n          alert(`Transaction error. Please try again. ${'\\n'} Error: ${error.message}`)\n        });\n\n        const scholarshipListLength = await this.state.contract.methods.getScholarshipListLength().call();\n\n        for(let i=0; i<scholarshipListLength; i++) {\n          const scholarshipValue = await this.state.contract.methods\n            .getScholarshipValues(i)\n            .call()\n            .catch((error) => {\n              console.log(error);\n            });\n          scholarshipList.push({name: scholarshipValue[0], balance: scholarshipValue[1], need: scholarshipValue[2]});\n        }\n        this.setState({ inputCreateScholarshipValue: \"\", inputCreateNeedAmount: \"\", scholarshipList, scholarshipListLength });\n      }\n    } catch(error) {\n        console.log(error);\n    }\n  }\n\n  handleCreateScholarshipInputChange(event) {\n    this.setState({ inputCreateScholarshipValue: event.target.value });\n  }\n\n  handleCreateNeedInputChange(event) {\n    this.setState({ inputCreateNeedAmount: event.target.value });\n  }\n\n  handleCreateResetButtonClick(event) {\n    this.setState({\n      inputCreateScholarshipValue: \"\",\n      inputCreateNeedAmount: \"\",\n      inputCreateScholarshipValueError: false,\n      inputCreateNeedAmountError: false\n    });\n  }\n\n  handleUpdateScholarshipInputChange(event) {\n    this.setState({ inputUpdateScholarshipValue: event.target.value });\n  }\n\n  handleUpdateNeedInputChange(event) {\n    this.setState({ inputUpdateNeedAmount: event.target.value });\n  }\n\n  handleUpdateResetButtonClick(event) {\n    this.setState({\n      inputUpdateScholarshipValue: \"\",\n      inputUpdateNeedAmount: \"\",\n      inputUpdateScholarshipValueError: false,\n      inputUpdateNeedAmountError: false\n    });\n  }\n\n  handleUpdateButtonClick = async (event) => {\n    try{\n      if(this.state.inputUpdateScholarshipValue === \"\")\n        await this.setState({inputUpdateScholarshipValueError: true});\n      else\n        await this.setState({inputUpdateNeedAmountError: false});\n\n      if(this.state.inputUpdateNeedAmount === \"\")\n        await this.setState({inputUpdateNeedAmountError: true});\n      else if(isNaN(this.state.inputUpdateNeedAmount)) {\n        await this.setState({inputUpdateNeedAmountError: true});\n      } else if(this.state.inputUpdateNeedAmount<0)\n        await this.setState({inputUpdateNeedAmountError: true});\n      else\n        await this.setState({inputUpdateNeedAmountError: false});\n\n      if(!this.state.inputUpdateScholarshipValueError && !this.state.inputUpdateNeedAmountError) {\n        let scholarshipList = [];\n        await this.state.contract.methods\n        .updateScholarshipNeed(this.state.inputUpdateScholarshipValue, Math.round(this.state.inputUpdateNeedAmount))\n        .send({ from: this.state.accounts[0] })\n        .catch((error) => { alert(`Transaction was NOT sent. Please try again, perhaps after resetting your account. ${'\\n'} Error: ${error.message}`)});\n        const scholarshipListLength = await this.state.contract.methods.getScholarshipListLength().call();\n        for(let i=0; i<scholarshipListLength; i++) {\n          const scholarshipValue = await this.state.contract.methods\n            .getScholarshipValues(i)\n            .call()\n            .catch((error) => { console.log(\"Error\", error)});\n          scholarshipList.push({name: scholarshipValue[0], balance: scholarshipValue[1], need: scholarshipValue[2]});\n        }\n        this.setState({ inputUpdateScholarshipValue: \"\", inputUpdateNeedAmount: \"\", scholarshipList, scholarshipListLength });\n      }\n    } catch(error) {\n        console.log(\"Details: \", error)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Universities</h2>\n        <div>\n          <p>\n            If you want to create a new Scholarship, please submit the form below. Click 'Create Scholarship' to initiate a transaction. Once the transaction is complete, please refresh the page so the Scholarship above for updated values. A new Scholarship will be created, its 'Balance' will be 0, and its 'Need' will be updated.\n          </p>\n          <div>\n            <div>\n              <TextField\n                id=\"enter-Scholarship\"\n                label=\"Scholarship Name\"\n                variant=\"outlined\"\n                required\n                value={this.state.inputCreateScholarshipValue}\n                helperText={this.state.inputCreateScholarshipValueError ? \"This is a required field\" : \"\"}\n                error={this.state.inputCreateScholarshipValueError}\n                onChange={this.handleCreateScholarshipInputChange.bind(this)}\n                size=\"small\"\n                fullWidth\n                style={{marginBottom: '10px'}}\n              />\n\n              <TextField\n                id=\"enter-need\"\n                label=\"Scholarship Need\"\n                variant=\"outlined\"\n                required\n                value={this.state.inputCreateNeedAmount}\n                helperText={this.state.inputCreateNeedAmountError ? \"Requires a positive number\" : \"\"}\n                error={this.state.inputCreateNeedAmountError}\n                onChange={this.handleCreateNeedInputChange.bind(this)}\n                size=\"small\"\n                fullWidth\n              />\n            </div>\n\n            <br/>\n\n            <div>\n              <Button size=\"small\" onClick={this.handleCreateButtonClick.bind(this)}>\n                Create Scholarship\n              </Button>\n              <Button size=\"small\" onClick={this.handleCreateResetButtonClick.bind(this)}>\n                Clear\n              </Button>\n            </div>\n          </div>\n        </div>\n\n\n        <div>\n          <p>\n            If you want to update 'need' for one of the existing Scholarships, please submit the form below. Click 'Update Scholarship Need' to initiate a transaction. Once the transaction is complete, please refresh the page so the Scholarships above for the updated values. 'Need' total will be increased by the value you entered.\n          </p>\n          <div>\n            <div>\n              <TextField\n                id=\"select-scholarship\"\n                select\n                label=\"Select Scholarship\"\n                required\n                value={this.state.inputUpdateScholarshipValue}\n                helperText={this.state.inputUpdateScholarshipValueError ? \"This is a required field\" : \"\"}\n                error={this.state.inputUpdateScholarshipValueError}\n                onChange={this.handleUpdateScholarshipInputChange.bind(this)}\n                size=\"small\"\n                fullWidth\n                style={{marginBottom: '10px'}}\n              >\n                {this.state.scholarshipList.map((item, index) => (\n                  <MenuItem key={index} value={index}>\n                    {item.name}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <TextField\n                id=\"enter-need\"\n                label=\"Additional Scholarship Need\"\n                variant=\"outlined\"\n                required\n                value={this.state.inputUpdateNeedAmount}\n                helperText={this.state.inputUpdateNeedAmountError ? \"Requires a positive number\" : \"\"}\n                error={this.state.inputUpdateNeedAmountError}\n                onChange={this.handleUpdateNeedInputChange.bind(this)}\n                size=\"small\"\n                fullWidth\n              />\n            </div>\n\n            <br/>\n\n            <div>\n              <Button size=\"small\" onClick={this.handleUpdateButtonClick.bind(this)}>\n                Update Scholarship Need\n              </Button>\n              <Button size=\"small\" onClick={this.handleUpdateResetButtonClick.bind(this)}>\n                Clear\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Universities;\n","import React, { Component } from \"react\";\nimport { MenuItem, Button, TextField } from '@mui/material';\n\nclass Donor extends Component {\n  constructor(props) {\n    // Might not be a good idea but this is my first react app.\n    super(props);\n    this.state = props.state;\n  }\n\n  // Page needs to be refreshed due to a bug or error or mistake made by me in comm, I'm still investigating....\n  render() {\n    return(\n      <div>\n      <h2>Donors</h2>\n\n      <div>\n        <p>\n          Select the Scholarship and Amount. Click 'Donate' to initiate a transaction. Once the transaction is complete, please refresh page to check the Scholarships above for updated values. 'Balance' will be increased and 'Need' will be decreased.\n        </p>\n        <div>\n          <div>\n            <TextField\n              id=\"select-scholarship\"\n              select\n              label=\"Select Scholarship\"\n              required\n              value={this.state.inputDonorValue}\n              helperText={this.state.inputDonorValueError ? \"This is a required field\" : \"\"}\n              error={this.state.inputDonorValueError}\n              onChange={this.handleDonorInputChange.bind(this)}\n              size=\"small\"\n              fullWidth\n              style={{marginBottom: '10px'}}\n            >\n              {this.state.scholarshipList.map((item, index) => (\n                <MenuItem key={index} value={index}>\n                  {item.name}\n                </MenuItem>\n              ))}\n            </TextField>\n\n            <TextField\n              id=\"enter-amount\"\n              label=\"Amount\"\n              variant=\"outlined\"\n              required\n              value={this.state.inputDonorAmountValue}\n              helperText={this.state.inputDonorAmountValueError ? \"Requires a positive number\" : \"\"}\n              error={this.state.inputDonorAmountValueError}\n              onChange={this.handleDonorAmountInputChange.bind(this)}\n              size=\"small\"\n              fullWidth\n            />\n          </div>\n\n          <br/>\n            <div>\n              <Button size=\"small\" onClick={this.handleDonateButtonClick.bind(this)}>\n                Donate\n              </Button>\n\n              <Button size=\"small\" onClick={this.handleDonorResetButtonClick.bind(this)}>\n                Clear\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  handleDonorInputChange(event) {\n    this.setState({ inputDonorValue: event.target.value });\n  }\n\n  handleDonorAmountInputChange(event) {\n    this.setState({ inputDonorAmountValue: event.target.value });\n  }\n\n  handleDonorResetButtonClick(event) {\n    this.setState({\n      inputDonorValue: \"\",\n      inputDonorAmountValue: \"\",\n      inputDonorAmountValueError: false,\n      inputDonorValueError: false\n    });\n  }\n\n  handleDonateButtonClick = async (event) => {\n    try{\n      if(this.state.inputDonorValue === \"\")\n        await this.setState({ inputDonorValueError: true });\n      else\n        await this.setState({ inputDonorValueError: false });\n\n      if(this.state.inputDonorAmountValue === \"\")\n        await this.setState({ inputDonorAmountValueError: true });\n      else if (isNaN(this.state.inputDonorAmountValue)) {\n        await this.setState({ inputDonorAmountValueError: true });\n      } else if (this.state.inputDonorAmountValue<0)\n        await this.setState({ inputDonorAmountValueError: true });\n      else\n        await this.setState({ inputDonorAmountValueError: false });\n\n      if(!this.state.inputDonorValueError && !this.state.inputDonorAmountValueError) {\n        let scholarshipList = [];\n        await this.state.contract.methods\n        .sendDonation(this.state.inputDonorValue)\n        .send({ from: this.state.accounts[0], value: Math.round(this.state.inputDonorAmountValue) })\n        .catch((error) => {\n          alert(`Transaction error. Please try again. ${'\\n'} Error: ${error.message}` )\n        });\n\n        for(let i=0; i<this.state.scholarshipListLength; i++) {\n          const scholarshipValue = await this.state.contract.methods\n          .getScholarshipValues(i)\n          .call()\n          .catch((error) => {\n            console.log(error);\n          });\n\n          scholarshipList.push({name: scholarshipValue[0], balance: scholarshipValue[1], need: scholarshipValue[2]});\n        }\n        this.setState({ inputDonorValue: \"\", inputDonorAmountValue: \"\", scholarshipList: scholarshipList });\n      }\n    } catch(error) {\n      console.log(error);\n    }\n  }\n}\n\nexport default Donor;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return(\n      <div style={{textAlign: 'center'}}>\n        <div className=\"text-center\">\n          <small>&copy; 2022 randara</small>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\n\nclass ToDo extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Todo</h2>\n        <p>A lot of details coming soon.....</p>\n      </div>\n    );\n  }\n}\n\nexport default ToDo;\n","// Requires react 17.x and over for material-ui. Truffle Unbox React installs react 16.x.\nimport React, { Component } from \"react\";\nimport CryptoScholarship from \"./contracts/CryptoScholarship.json\";\n\nimport getWeb3 from \"./getWeb3\";\nimport Default from \"./components/Default.js\";\nimport Header from \"./components/Header.js\";\nimport Scholarships from \"./components/Scholarships.js\";\nimport Universities from \"./components/Universities.js\";\nimport Donor from \"./components/Donor.js\"\nimport Footer from \"./components/Footer.js\";\nimport ToDo from \"./components/ToDo.js\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    web3: null,\n    accounts: null,\n    contract: null,\n    contractAddress: null,\n    scholarshipList: null,\n    scholarshipListLength: null,\n    inputCreateScholarshipValue: '',\n    inputCreateScholarshipValueError: false,\n    inputCreateNeedAmount: '',\n    inputCreateNeedAmountError: false,\n    inputUpdateScholarshipValue: '',\n    inputUpdateScholarshipValueError: false,\n    inputUpdateNeedAmount: '',\n    inputUpdateNeedAmountError: false,\n    inputDonorValue: '',\n    inputDonorValueError: false,\n    inputDonorAmountValue: '',\n    inputDonorAmountValueError: false\n  };\n\n  componentDidMount = async () => {\n    try {\n      const web3 = await getWeb3();\n      const accounts = await web3.eth.getAccounts();\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = CryptoScholarship.networks[networkId];\n      const instance = new web3.eth.Contract(CryptoScholarship.abi, deployedNetwork && deployedNetwork.address);\n      const scholarshipListLength = await instance.methods.getScholarshipListLength().call();\n\n      let scholarshipList = [];\n\n      for(let i=0; i<scholarshipListLength; i++) {\n        const scholarshipValue = await instance.methods.getScholarshipValues(i).call();\n        scholarshipList.push({name: scholarshipValue[0], balance: scholarshipValue[1], need: scholarshipValue[2]});\n      }\n\n      this.setState({\n        web3,\n        accounts,\n        contract: instance,\n        contractAddress: deployedNetwork.address,\n        scholarshipListLength,\n        scholarshipList\n      }, this.runExample);\n    } catch (error) {\n      alert(\n        'Error loading. Please ensure you have logged into you MetaMask wallet and connected your account on the Rinkeby Test Network.'\n      );\n      console.error(error);\n    }\n  };\n\n  runExample = async () => {};\n\n  render() {\n    if (!this.state.web3) {\n      return <Default/>\n    }\n    // Scholarships can be refactored into smaller components.\n\n    return (\n      <div className=\"App\">\n        <Header contractAddress={this.state.contractAddress} accounts={this.state.accounts} />\n\n        <h2>Scholarships</h2>\n        <p> Scholarships, balances, and need below </p>\n\n        <div>\n          {\n            this.state.scholarshipListLength ?\n            <div>\n              <Scholarships state={this.state}/>\n            </div>\n            :\n            <p>\n              No Scholarships found.\n            </p>\n          }\n        </div>\n\n        <Universities state={this.state} />\n        <Donor state={this.state} />\n        <ToDo />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}